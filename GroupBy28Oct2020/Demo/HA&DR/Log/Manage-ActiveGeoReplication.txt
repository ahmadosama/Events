**********************
Windows PowerShell transcript start
Start time: 20201028031233
Username: appvm\aosama
RunAs User: appvm\aosama
Configuration Name: 
Machine: appvm (Microsoft Windows NT 10.0.17763.0)
Host Application: powershell -noninteractive -noprofile -File -
Process ID: 1360
PSVersion: 5.1.17763.1007
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.17763.1007
BuildVersion: 10.0.17763.1007
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand

Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up 
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo `
-PrimarySQLServer aoazsqlserver `
-Username aosama `
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand

Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up 
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo `
-PrimarySQLServer aoazsqlserver `
-Username aosama `
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand

Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up 
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo -PrimarySQLServer aoazsqlserver -Username aosama -Password Awesome@1234 -SecondarySQLServer aoazsqlserversecondary -SecondaryServerLocation eastus2 -DatabasesToReplicate aostackoverflow2010 -Operation "Enable" -AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json" -Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand
Set-AzContext : Please provide a valid tenant or a valid subscription.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:60 char:1
+ Set-AzContext -SubscriptionId $SubscriptionID | Out-Null
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Set-AzContext], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Profile.SetAzureRMContextCommand

Provisioning Azure SQL Server aoazsqlserversecondary
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up 
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Your Azure credentials have not been set up or have expired, please run Connect-AzAccount to set up
your Azure credentials.
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:83 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], ArgumentException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
-PrimarySQLServer aoazsqlserver `
-Username aosama `
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
^TerminatingError(Manage-ActiveGeoReplication.ps1): "Cannot process command because of one or more missing mandatory parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation."
C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1 : Cannot process command because of one or more missing mandatory 
parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation.
At line:3 char:1
+ .\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Manage-ActiveGeoReplication.ps1], ParameterBindingException
    + FullyQualifiedErrorId : MissingMandatoryParameter,Manage-ActiveGeoReplication.ps1
C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1 : Cannot process command because of one or more missing
mandatory parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation.
At line:3 char:1
+ .\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Manage-ActiveGeoReplication.ps1], ParameterBindingException
    + FullyQualifiedErrorId : MissingMandatoryParameter,Manage-ActiveGeoReplication.ps1

-PrimarySQLServer : The term '-PrimarySQLServer' is not recognized as the name of a cmdlet, function, script file, or 
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try 
again.
At line:4 char:1
+ -PrimarySQLServer aoazsqlserver `
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (-PrimarySQLServer:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
-PrimarySQLServer : The term '-PrimarySQLServer' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
again.
At line:4 char:1
+ -PrimarySQLServer aoazsqlserver `
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (-PrimarySQLServer:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
-PrimarySQLServer aoazsqlserver `
-Username aosama `
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
^TerminatingError(Manage-ActiveGeoReplication.ps1): "Cannot process command because of one or more missing mandatory parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation."
C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1 : Cannot process command because of one or more missing mandatory 
parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation.
At line:3 char:1
+ .\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Manage-ActiveGeoReplication.ps1], ParameterBindingException
    + FullyQualifiedErrorId : MissingMandatoryParameter,Manage-ActiveGeoReplication.ps1
C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1 : Cannot process command because of one or more missing
mandatory parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation.
At line:3 char:1
+ .\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Manage-ActiveGeoReplication.ps1], ParameterBindingException
    + FullyQualifiedErrorId : MissingMandatoryParameter,Manage-ActiveGeoReplication.ps1

-PrimarySQLServer : The term '-PrimarySQLServer' is not recognized as the name of a cmdlet, function, script file, or 
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try 
again.
At line:4 char:1
+ -PrimarySQLServer aoazsqlserver `
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (-PrimarySQLServer:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
-PrimarySQLServer : The term '-PrimarySQLServer' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
again.
At line:4 char:1
+ -PrimarySQLServer aoazsqlserver `
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (-PrimarySQLServer:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
-PrimarySQLServer aoazsqlserver `
-Username aosama `
-Password Awesome@1234 `
-SecondarySQLServer aoazsqlserversecondary `
-SecondaryServerLocation eastus2 `
-DatabasesToReplicate aostackoverflow2010 `
-Operation "Enable" `
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json" `
-Failover $False
}
^TerminatingError(Manage-ActiveGeoReplication.ps1): "Cannot process command because of one or more missing mandatory parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation."
C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1 : Cannot process command because of one or more missing mandatory 
parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation.
At line:3 char:1
+ .\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Manage-ActiveGeoReplication.ps1], ParameterBindingException
    + FullyQualifiedErrorId : MissingMandatoryParameter,Manage-ActiveGeoReplication.ps1
C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1 : Cannot process command because of one or more missing
mandatory parameters: PrimarySqlServer UserName Password SecondarySqlServer SecondaryServerLocation.
At line:3 char:1
+ .\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (:) [Manage-ActiveGeoReplication.ps1], ParameterBindingException
    + FullyQualifiedErrorId : MissingMandatoryParameter,Manage-ActiveGeoReplication.ps1

-PrimarySQLServer : The term '-PrimarySQLServer' is not recognized as the name of a cmdlet, function, script file, or 
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try 
again.
At line:4 char:1
+ -PrimarySQLServer aoazsqlserver `
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (-PrimarySQLServer:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
-PrimarySQLServer : The term '-PrimarySQLServer' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
again.
At line:4 char:1
+ -PrimarySQLServer aoazsqlserver `
+ ~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (-PrimarySQLServer:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo `
-PrimarySQLServer aoazsqlserver `
-Username aosama `
-Password Awesome@1234 `
-SecondarySQLServer aoazsqlserversecondary `
-SecondaryServerLocation eastus2 `
-DatabasesToReplicate aostackoverflow2010 `
-Operation "Enable" `
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json" `
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
b85b0984-a391-4f22-a832-fb6e46c39f38
Provisioning Azure SQL Server aoazsqlserversecondary


ResourceGroupName        : demo
ServerName               : aoazsqlserversecondary
Location                 : eastus2
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : aoazsqlserversecondary.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo/providers/Microsoft.
                           Sql/servers/aoazsqlserversecondary
MinimalTlsVersion        :
PublicNetworkAccess      : Enabled



^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo`
-PrimarySQLServer aoazsqlserver`
-Username aosama`
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
b85b0984-a391-4f22-a832-fb6e46c39f38
Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo`
-PrimarySQLServer aoazsqlserver`
-Username aosama`
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

Replicating database aostackoverflow2010
-Operation to aoazsqlserversecondary
-SecondaryServerLocation
Get-AzSqlDatabase : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:106 char:21
+ ... $database = Get-AzSqlDatabase -DatabaseName $db -ResourceGroupName $R ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Get-AzSqlDatabase], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Database.Cmdlet.GetAzureSqlDatabase
Get-AzSqlDatabase : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:106 char:21
+ ... $database = Get-AzSqlDatabase -DatabaseName $db -ResourceGroupName $R ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Get-AzSqlDatabase], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Database.Cmdlet.GetAzureSqlDatabase

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo`
-PrimarySQLServer aoazsqlserver`
-Username aosama`
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

Replicating database aostackoverflow2010
-Operation to aoazsqlserversecondary
-SecondaryServerLocation
Get-AzSqlDatabase : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:106 char:21
+ ... $database = Get-AzSqlDatabase -DatabaseName $db -ResourceGroupName $R ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Get-AzSqlDatabase], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Database.Cmdlet.GetAzureSqlDatabase
Get-AzSqlDatabase : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:106 char:21
+ ... $database = Get-AzSqlDatabase -DatabaseName $db -ResourceGroupName $R ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Get-AzSqlDatabase], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Database.Cmdlet.GetAzureSqlDatabase

^. {
>> . {
Set-Location -Path "C:\GroupBy\Demo\HA&DR"
.\Manage-ActiveGeoReplication.ps1 -ResourceGroup demo`
-PrimarySQLServer aoazsqlserver`
-Username aosama`
-Password Awesome@1234`
-SecondarySQLServer aoazsqlserversecondary`
-SecondaryServerLocation eastus2`
-DatabasesToReplicate aostackoverflow2010`
-Operation "Enable"`
-AzureProfileFilePath "C:\GroupBy\MyAzureProfile.json"`
-Failover $False
}
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Provisioning Azure SQL Server aoazsqlserversecondary
-SecondaryServerLocation
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer
New-AzSqlServer : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:85 char:14
+              New-AzSqlServer @_SecondarySqlServer;
+              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlServer], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Server.Cmdlet.NewAzureSqlServer

Replicating database aostackoverflow2010
-Operation to aoazsqlserversecondary
-SecondaryServerLocation
Get-AzSqlDatabase : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:106 char:21
+ ... $database = Get-AzSqlDatabase -DatabaseName $db -ResourceGroupName $R ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Get-AzSqlDatabase], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Database.Cmdlet.GetAzureSqlDatabase
Get-AzSqlDatabase : Operation returned an invalid status code 'BadRequest'
At C:\GroupBy\Demo\HA&DR\Manage-ActiveGeoReplication.ps1:106 char:21
+ ... $database = Get-AzSqlDatabase -DatabaseName $db -ResourceGroupName $R ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Get-AzSqlDatabase], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.Database.Cmdlet.GetAzureSqlDatabase

^$global:?
True
**********************
Windows PowerShell transcript end
End time: 20201028034538
**********************
**********************
Windows PowerShell transcript start
Start time: 20201028060429
Username: appvm\aosama
RunAs User: appvm\aosama
Configuration Name: 
Machine: appvm (Microsoft Windows NT 10.0.17763.0)
Host Application: powershell -noninteractive -noprofile -File -
Process ID: 1316
PSVersion: 5.1.17763.1007
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.17763.1007
BuildVersion: 10.0.17763.1007
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is .\Log\Manage-ActiveGeoReplication.txt
Provisioning Azure SQL Server azsosqlservergeosecondary


ResourceGroupName        : demo
ServerName               : azsosqlservergeosecondary
Location                 : eastus2
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : azsosqlservergeosecondary.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo/providers/Microsoft.
                           Sql/servers/azsosqlservergeosecondary
MinimalTlsVersion        :
PublicNetworkAccess      : Enabled

Replicating database stackoverflow2010test to azsosqlservergeosecondary
LinkId                   : ed0d7f15-0a9d-4744-afec-a042a2873562
ResourceGroupName        : demo
ServerName               : azsosqlserver
DatabaseName             : stackoverflow2010test
Role                     : Primary
Location                 : East US
PartnerResourceGroupName : demo
PartnerServerName        : azsosqlservergeosecondary
PartnerDatabaseName      : stackoverflow2010test
PartnerRole              : Secondary
PartnerLocation          : East US 2
AllowConnections         : All
ReplicationState         : CATCH_UP
PercentComplete          : 100
StartTime                : 10/28/2020 6:05:51 AM



^. {
>> . {
Set-Location -Path "C:\Events\GroupBy28Oct2020\Demo\HA&DR"
.\Manage-FailoverGroup.ps1 -ResourceGroup demo `
-PrimarySqlServer azsosqlserver `
-UserName aosama `
-Password Awesome@1234 `
-SecondarySqlServer azsosqlserverfailovergroupsecondary `
-SecondaryServerLocation eastus2 `
-Failover $False `
-DatabasesToReplicate stackoverflow2010test `
-FailoverGroupName aoazgroup `
-Operation "Create" `
-AzureProfileFilePath C:\Events\GroupBy28Oct2020\MyAzureProfile.json
}
Transcript started, output file is .\Log\Manage-FailoverGroup.txt
Provisioning Azure SQL Server azsosqlserverfailovergroupsecondary


ResourceGroupName        : demo
ServerName               : azsosqlserverfailovergroupsecondary
Location                 : eastus2
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : azsosqlserverfailovergroupsecondary.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo/providers/Microsoft.
                           Sql/servers/azsosqlserverfailovergroupsecondary
MinimalTlsVersion        :
PublicNetworkAccess      : Enabled

Creating the failover group aoazgroup
New-AzSqlDatabaseFailoverGroup : FailoverGroupDnsRecordInUse: The endpoint 'aoazgroup' is already in use. Use a 
different Failover Group name.
At C:\Events\GroupBy28Oct2020\Demo\HA&DR\Manage-FailoverGroup.ps1:79 char:1
+ New-AzSqlDatabaseFailoverGroup `
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlDatabaseFailoverGroup], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.FailoverGroup.Cmdlet.NewAzureSqlFailoverGroup
New-AzSqlDatabaseFailoverGroup : FailoverGroupDnsRecordInUse: The endpoint 'aoazgroup' is already in use. Use a
different Failover Group name.
At C:\Events\GroupBy28Oct2020\Demo\HA&DR\Manage-FailoverGroup.ps1:79 char:1
+ New-AzSqlDatabaseFailoverGroup `
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [New-AzSqlDatabaseFailoverGroup], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.FailoverGroup.Cmdlet.NewAzureSqlFailoverGroup

Adding database stackoverflow2010test to failover group aoazgroup
Add-AzSqlDatabaseToFailoverGroup : ResourceNotFound: The requested resource of type 
'Microsoft.Sql/servers/failoverGroups' with name 'aoazgroup' was not found.
At C:\Events\GroupBy28Oct2020\Demo\HA&DR\Manage-FailoverGroup.ps1:97 char:9
+         Add-AzSqlDatabaseToFailoverGroup -ResourceGroupName $Resource ...
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Add-AzSqlDatabaseToFailoverGroup], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.FailoverGroup.Cmdlet.AddAzureSqlDatabaseToFailoverGroup
Add-AzSqlDatabaseToFailoverGroup : ResourceNotFound: The requested resource of type
'Microsoft.Sql/servers/failoverGroups' with name 'aoazgroup' was not found.
At C:\Events\GroupBy28Oct2020\Demo\HA&DR\Manage-FailoverGroup.ps1:97 char:9
+         Add-AzSqlDatabaseToFailoverGroup -ResourceGroupName $Resource ...
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : CloseError: (:) [Add-AzSqlDatabaseToFailoverGroup], CloudException
    + FullyQualifiedErrorId : Microsoft.Azure.Commands.Sql.FailoverGroup.Cmdlet.AddAzureSqlDatabaseToFailoverGroup



^. {
>> . {
Set-Location -Path "C:\Events\GroupBy28Oct2020\Demo\HA&DR"
.\Manage-FailoverGroup.ps1 -ResourceGroup demo `
-PrimarySqlServer azsosqlserver `
-UserName aosama `
-Password Awesome@1234 `
-SecondarySqlServer azsosqlserverfailovergroupsecondary `
-SecondaryServerLocation eastus2 `
-Failover $False `
-DatabasesToReplicate stackoverflow2010test `
-FailoverGroupName azsogroup `
-Operation "Create" `
-AzureProfileFilePath C:\Events\GroupBy28Oct2020\MyAzureProfile.json
}
Transcript started, output file is .\Log\Manage-FailoverGroup.txt


ResourceGroupName        : demo
ServerName               : azsosqlserverfailovergroupsecondary
Location                 : eastus2
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : azsosqlserverfailovergroupsecondary.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo/providers/Microsoft.
                           Sql/servers/azsosqlserverfailovergroupsecondary
MinimalTlsVersion        :
PublicNetworkAccess      : Enabled


Creating the failover group azsogroup
ResourceGroupName                    : Demo
ServerName                           : azsosqlserver
FailoverGroupName                    : azsogroup
FailoverGroupReadWriteEndpoint       :
FailoverGroupReadOnlyEndpoint        :
PartnerServers                       : {/subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo/provide
                                       rs/Microsoft.Sql/servers/azsosqlserverfailovergroupsecondary}
PartnerResourceGroupName             : demo
PartnerServerName                    : azsosqlserverfailovergroupsecondary
PartnerLocation                      : East US 2
Databases                            : {}
DatabaseNames                        : {}
ReplicationRole                      : Primary
ReplicationState                     : CATCH_UP
ReadWriteFailoverPolicy              : Automatic
FailoverWithDataLossGracePeriodHours : 1
ReadOnlyFailoverPolicy               : Disabled
Id                                   : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/provider
                                       s/Microsoft.Sql/servers/azsosqlserver/failoverGroups/azsogroup
Location                             : East US
Kind                                 :
Tags                                 :

Adding database stackoverflow2010test to failover group azsogroup
ResourceGroupName                    : Demo
ServerName                           : azsosqlserver
FailoverGroupName                    : azsogroup
FailoverGroupReadWriteEndpoint       :
FailoverGroupReadOnlyEndpoint        :
PartnerServers                       : {/subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo/provide
                                       rs/Microsoft.Sql/servers/azsosqlserverfailovergroupsecondary}
PartnerResourceGroupName             : demo
PartnerServerName                    : azsosqlserverfailovergroupsecondary
PartnerLocation                      : East US 2
Databases                            : {/subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/provide
                                       rs/Microsoft.Sql/servers/azsosqlserver/databases/stackoverflow2010test}
DatabaseNames                        : {stackoverflow2010test}
ReplicationRole                      : Primary
ReplicationState                     : CATCH_UP
ReadWriteFailoverPolicy              : Automatic
FailoverWithDataLossGracePeriodHours : 1
ReadOnlyFailoverPolicy               : Disabled
Id                                   : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/provider
                                       s/Microsoft.Sql/servers/azsosqlserver/failoverGroups/azsogroup
Location                             : East US
Kind                                 :
Tags                                 :



^. {
>> . {
Remove-AzSQLServer -ServerName azsosqlserver -ResourceGroupName demo
}


ResourceGroupName        : Demo
ServerName               : azsosqlserver
Location                 : eastus
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : azsosqlserver.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/providers/Microsoft.
                           Sql/servers/azsosqlserver
MinimalTlsVersion        :
PublicNetworkAccess      : Disabled



^. {
>> . {
set-location -path "C:\Events\GroupBy28Oct2020\Demo"
 .\ProvisionAzureSQLDatabase.ps1 -ResourceGroup Demo `
 -Location eastus `
 -SQLServer azsosqlserver `
 -UserName aosama `
 -Password Awesome@1234 `
 -SQLDatabase stackoverflow2010test `
 -Edition basic `
 -AzureProfileFilePath C:\Events\GroupBy28Oct2020\MyAzureProfile.json
}
Transcript started, output file is .\log\ProvisionAzureSQLDatabase.txt


ResourceGroupName : demo
Location          : eastus
ProvisioningState : Succeeded
Tags              :
ResourceId        : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo


Provisioning Azure SQL Server azsosqlserver

ResourceGroupName        : Demo
ServerName               : azsosqlserver
Location                 : eastus
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : azsosqlserver.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/providers/Microsoft.
                           Sql/servers/azsosqlserver
MinimalTlsVersion        :
PublicNetworkAccess      : Enabled

Provisioning Azure SQL Database stackoverflow2010test

ResourceGroupName             : Demo
ServerName                    : azsosqlserver
DatabaseName                  : stackoverflow2010test
Location                      : eastus
DatabaseId                    : 29cbcada-3fcb-4b14-8087-c25371fed26c
Edition                       : Basic
CollationName                 : SQL_Latin1_General_CP1_CI_AS
CatalogCollation              :
MaxSizeBytes                  : 2147483648
Status                        : Online
CreationDate                  : 10/28/2020 6:58:11 AM
CurrentServiceObjectiveId     : 00000000-0000-0000-0000-000000000000
CurrentServiceObjectiveName   : Basic
RequestedServiceObjectiveName : Basic
RequestedServiceObjectiveId   :
ElasticPoolName               :
EarliestRestoreDate           : 10/28/2020 7:28:11 AM
Tags                          :
ResourceId                    : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/providers/Micro
                                soft.Sql/servers/azsosqlserver/databases/stackoverflow2010test
CreateMode                    :
ReadScale                     : Disabled
ZoneRedundant                 : False
Capacity                      : 5
Family                        :
SkuName                       : Basic
LicenseType                   :
AutoPauseDelayInMinutes       :
MinimumCapacity               :
ReadReplicaCount              : 0
BackupStorageRedundancy       : Geo

Creating firewall rule for  with StartIP: 40.87.97.63 and EndIP: 40.87.97.63

ResourceGroupName : Demo
ServerName        : azsosqlserver
StartIpAddress    : 40.87.97.63
EndIpAddress      : 40.87.97.63
FirewallRuleName  : Home_20201028061022



^. {
>> . {
set-location -path "C:\Events\GroupBy28Oct2020\Demo"
 .\ProvisionAzureSQLDatabase.ps1 -ResourceGroup Demo `
 -Location eastus `
 -SQLServer azsosqlserver `
 -UserName aosama `
 -Password "Awesome@1234" `
 -SQLDatabase stackoverflow2010test `
 -Edition basic `
 -AzureProfileFilePath C:\Events\GroupBy28Oct2020\MyAzureProfile.json
}
Transcript started, output file is .\log\ProvisionAzureSQLDatabase.txt


ResourceGroupName : demo
Location          : eastus
ProvisioningState : Succeeded
Tags              :
ResourceId        : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/demo


Provisioning Azure SQL Server azsosqlserver

ResourceGroupName        : Demo
ServerName               : azsosqlserver
Location                 : eastus
SqlAdministratorLogin    : aosama
SqlAdministratorPassword :
ServerVersion            : 12.0
Tags                     :
Identity                 :
FullyQualifiedDomainName : azsosqlserver.database.windows.net
ResourceId               : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/providers/Microsoft.
                           Sql/servers/azsosqlserver
MinimalTlsVersion        :
PublicNetworkAccess      : Enabled

Provisioning Azure SQL Database stackoverflow2010test

ResourceGroupName             : Demo
ServerName                    : azsosqlserver
DatabaseName                  : stackoverflow2010test
Location                      : eastus
DatabaseId                    : 24f63a0c-51d0-4fe2-81ad-4da3373ba986
Edition                       : Basic
CollationName                 : SQL_Latin1_General_CP1_CI_AS
CatalogCollation              :
MaxSizeBytes                  : 2147483648
Status                        : Online
CreationDate                  : 10/28/2020 7:12:20 AM
CurrentServiceObjectiveId     : 00000000-0000-0000-0000-000000000000
CurrentServiceObjectiveName   : Basic
RequestedServiceObjectiveName : Basic
RequestedServiceObjectiveId   :
ElasticPoolName               :
EarliestRestoreDate           : 10/28/2020 7:42:20 AM
Tags                          :
ResourceId                    : /subscriptions/b85b0984-a391-4f22-a832-fb6e46c39f38/resourceGroups/Demo/providers/Micro
                                soft.Sql/servers/azsosqlserver/databases/stackoverflow2010test
CreateMode                    :
ReadScale                     : Disabled
ZoneRedundant                 : False
Capacity                      : 5
Family                        :
SkuName                       : Basic
LicenseType                   :
AutoPauseDelayInMinutes       :
MinimumCapacity               :
ReadReplicaCount              : 0
BackupStorageRedundancy       : Geo

Creating firewall rule for  with StartIP: 40.87.97.63 and EndIP: 40.87.97.63

ResourceGroupName : Demo
ServerName        : azsosqlserver
StartIpAddress    : 40.87.97.63
EndIpAddress      : 40.87.97.63
FirewallRuleName  : Home_20201028071034



